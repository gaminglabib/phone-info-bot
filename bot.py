import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes
import httpx

# ЁЯФР рждрзЛржорж╛рж░ ржмржЯ ржЯрзЛржХрзЗржи ржПржЦрж╛ржирзЗ ржмрж╕рж╛ржУ
BOT_TOKEN = "7921673777:AAH5GqPcew87tpTJQNwpQEt24gkld-QiEg0"

# тЬЕ Logging ржЪрж╛рж▓рзБ
logging.basicConfig(level=logging.INFO)

# тЦ╢я╕П /start ржХржорж╛ржирзНржб
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    full_name = user.full_name
    keyboard = [[InlineKeyboardButton("ЁЯУЮ ржиржорзНржмрж░ ржпрж╛ржЪрж╛ржЗ ржХрж░рзБржи", callback_data="check_number")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_msg = f"""ЁЯСЛ рж╣рзНржпрж╛рж▓рзЛ {full_name}!
ЁЯУ▒ ржПржЗ ржмржЯ ржжрж┐рзЯрзЗ ржЖржкржирж┐ ржпрзЗ ржХрзЛржи ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░рзЗрж░ ржЕржкрж╛рж░рзЗржЯрж░, ржжрзЗрж╢, ржЯрж╛ржЗржк ржПржмржВ рж▓рзЛржХрзЗрж╢ржи ржмрзЗрж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред

ЁЯФН ржПржХржЯрж┐ ржиржорзНржмрж░ ржпрж╛ржЪрж╛ржЗ ржХрж░рждрзЗ рж▓рж┐ржЦрзБржи:
`/phone 01712345678`

тЬЕ ржЙржжрж╛рж╣рж░ржг: `/phone 01812345678`
"""
    await update.message.reply_text(welcome_msg, reply_markup=reply_markup, parse_mode="Markdown")

# ЁЯУЮ ржиржорзНржмрж░ ржЪрзЗржХ ржХрж░рж╛рж░ ржХржорж╛ржирзНржб
async def phone_lookup(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("тЪая╕П ржжрзЯрж╛ ржХрж░рзЗ ржПржХржЯрж┐ ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░ ржжрж┐ржиред\nржЙржжрж╛рж╣рж░ржг: /phone 01712345678")
        return

    number = context.args[0]
    url = f"https://api.sumanjay.cf/phone/{number}"

    try:
        async with httpx.AsyncClient() as client:
            res = await client.get(url)
            data = res.json()

        if "success" in data and data["success"] is False:
            await update.message.reply_text("тЭМ ржиржорзНржмрж░ржЯрж┐ рж╕ржарж┐ржХ ржирзЯ ржмрж╛ рждржерзНржп ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред")
            return

        reply = f"ЁЯФО ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг\n\n"
        reply += f"ЁЯУ▒ ржиржорзНржмрж░: {number}\n"
        reply += f"ЁЯМН ржжрзЗрж╢: {data.get('country', 'N/A')}\n"
        reply += f"ЁЯПв ржЕржкрж╛рж░рзЗржЯрж░: {data.get('operator', 'N/A')}\n"
        reply += f"ЁЯУ╢ ржЯрж╛ржЗржк: {data.get('type', 'N/A')}\n"
        reply += f"ЁЯУН рж▓рзЛржХрзЗрж╢ржи: {data.get('location', 'ржЕржЬрж╛ржирж╛')}"

        await update.message.reply_text(reply)

    except Exception as e:
        logging.error(e)
        await update.message.reply_text("тЪая╕П рж╕рж╛рж░рзНржнрж╛рж░ ржерзЗржХрзЗ рждржерзНржп ржЖржирж╛ ржпрж╛рзЯржирж┐ред ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред")

# тЦ╢я╕П Main Function
def main():
    app = Application.builder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("phone", phone_lookup))
    app.run_polling()

if __name__ == "__main__":
    main()
