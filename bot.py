import logging
import aiohttp
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

BOT_TOKEN = "7921673777:AAH5GqPcew87tpTJQNwpQEt24gkld-QiEg0"

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

API_URL = "https://api.apilayer.com/number_verification/validate?number={number}"
API_KEY = "e1d3d0a7e6msh6c928643e3b79d6p1c85fajsnc86d8fd50c92"  # Demo key

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    await update.message.reply_text(
        f"ржкрзНрж░рж┐рзЯ {user.full_name}, Toxic Digonto ржПрж░ ржмржЯ-ржП ржЖржкржирж╛ржХрзЗ рж╕рзНржмрж╛ржЧрждржоред\n\n"
        "ЁЯУЮ ржЖржкржирж┐ /phone <ржиржорзНржмрж░> рж▓рж┐ржЦрзЗ ржлрзЛржи ржиржорзНржмрж░рзЗрж░ рждржерзНржп ржЬрж╛ржирждрзЗ ржкрж╛рж░ржмрзЗржиред\n"
        "ржЙржжрж╛рж╣рж░ржг: /phone +8801712345678"
    )

async def phone_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if len(context.args) != 1:
        await update.message.reply_text("тЭЧ ржжрзЯрж╛ ржХрж░рзЗ ржПржХржЯрж┐ рж╕ржарж┐ржХ ржлрзЛржи ржиржорзНржмрж░ рж▓рж┐ржЦрзБржиред\nржпрзЗржоржи: /phone +8801712345678")
        return
    
    number = context.args[0]
    await update.message.reply_text(f"ЁЯФН {number} ржиржорзНржмрж░рзЗрж░ рждржерзНржп ржЦрзБржБржЬржЫрж┐...")

    headers = {
        "apikey": API_KEY
    }

    async with aiohttp.ClientSession() as session:
        async with session.get(API_URL.format(number=number), headers=headers) as resp:
            if resp.status == 200:
                data = await resp.json()
                if data.get("valid"):
                    response = (
                        f"тЬЕ рждржерзНржп ржкрж╛ржУрзЯрж╛ ржЧрзЗржЫрзЗ:\n"
                        f"ЁЯУЮ ржиржорзНржмрж░: {data.get('international_format', number)}\n"
                        f"ЁЯМН ржжрзЗрж╢: {data.get('country_name', 'ржирзЗржЗ')}\n"
                        f"ЁЯУ▒ ржЕржкрж╛рж░рзЗржЯрж░: {data.get('carrier', 'ржирзЗржЗ')}\n"
                        f"ЁЯУ╢ рж▓рж╛ржЗржи ржЯрж╛ржЗржк: {data.get('line_type', 'ржирзЗржЗ')}"
                    )
                    await update.message.reply_text(response)
                else:
                    await update.message.reply_text("тЭМ ржжрзБржГржЦрж┐ржд, ржиржорзНржмрж░ржЯрж┐ рж╕ржарж┐ржХ ржирзЯ ржЕржержмрж╛ рждржерзНржп ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред")
            else:
                await update.message.reply_text("тЪая╕П рж╕рж╛рж░рзНржнрж╛рж░ ржерзЗржХрзЗ рждржерзНржп ржЖржирж╛ ржпрж╛рзЯржирж┐ред ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред")

if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("phone", phone_info))

    print("ЁЯУб Bot is running...")
    app.run_polling()
